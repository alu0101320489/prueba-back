{"version":3,"file":"/home/daniel/sytw/backend/sytw_backend/src/routers/usuarioRouters/postDamage.ts","sources":["/home/daniel/sytw/backend/sytw_backend/src/routers/usuarioRouters/postDamage.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport { Usuario } from '../../models/usuario';\n\nexport const postDamageRouter = express.Router();\n\nconst jwt = require('jsonwebtoken');\n\n/**\n * Funcion que obtiene a un usuario de la base de datos segun un nombre.\n * Comprueba que se disponga del parametro nombre en la query\n * y crea el filtro para la base de datos tratandolo como una cadena.\n * La bbdd se filtra y si se obtiene algun usuario se devuelve, en\n * caso contrario se informa de un error.\n*/\npostDamageRouter.post('/damage', async (req, res) => {\n\n  let calculadora = new CalculatorComponent;\n  try {\n\n    if ((req.body.tipo1A!=undefined) && (req.body.tipo2A!=undefined)&&(req.body.tipo1D!=undefined) && (req.body.tipo2D!=undefined)&&(req.body.power!=undefined) && (req.body.moveType!=undefined)&&(req.body.statsA!=undefined) && (req.body.statsD!=undefined)&& (req.body.cat!=undefined)) {\n      console.log(req.body);\n      calculadora.tipo1A=req.body.tipo1A;\n      calculadora.tipo2A=req.body.tipo2A;\n      calculadora.tipo1D=req.body.tipo1D;\n      calculadora.tipo2D=req.body.tipo2D;\n      calculadora.power=req.body.power;\n      calculadora.moveType=req.body.moveType;\n      calculadora.statsA=req.body.statsA;\n      calculadora.statsD=req.body.statsD;\n      calculadora.cat=req.body.cat;\n      calculadora.dealDamage = 0;\n\n      calculadora.damage();\n      console.log(calculadora.dealDamage);\n      return res.status(200).json({damage: calculadora.dealDamage});\n    }\n    return res.status(404).json({ msg: \"Error de pokemon\"});\n  } catch (error) {\n    return res.status(500).json({ msg: \"Error\"});\n  }\n});\n\nexport enum Types {\n  steel = 0,\n  water = 1,\n  bug = 2,\n  dragon = 3,\n  electric = 4,\n  ghost = 5,\n  fire = 6,\n  fairy = 7,\n  ice = 8,\n  fighting = 9,\n  normal = 10,\n  grass = 11,\n  psychic = 12,\n  rock = 13,\n  dark = 14,\n  ground = 15,\n  poison = 16,\n  flying = 17\n}\nexport class CalculatorComponent {\n\n  statsA = [];\n  tipo1A = \"\";\n  tipo2A = \"\";\n\n  statsD = [];\n  tipo1D = \"\";\n  tipo2D = \"\";\n\n  url = null;\n  moveName = \"\";\n  power = 0;\n  moveType = \"\";\n  cat = \"\";\n  dealDamage = 0;\n\n  damage () {\n\n    if (this.cat === \"physical\") {\n        this.dealDamage = 10 * this.stab(this.tipo1A, this.tipo2A, this.moveType) * \n                    this.efectividad(this.moveType, this.tipo1D) * this.efectividad(this.moveType, this.tipo2D) *\n                    (((0.2 * this.statsA[1] + 1)* this.power)/(25 * this.statsD[2]) + 2) ;\n    } else {\n        this.dealDamage = 10 * this.stab(this.tipo1A, this.tipo2A, this.moveType) * \n                    this.efectividad(this.moveType, this.tipo1D) * this.efectividad(this.moveType, this.tipo2D) *\n                    (((0.2 * this.statsA[3] + 1)* this.power)/(25 * this.statsD[4]) + 2) ;\n    }\n  }\n\n  stab(t1 : string, t2 : string, tm : string) {\n    if (t1 === tm || t2 === tm) {\n        return 1.5;\n    } else {\n        return 1;\n    }\n  }\n\n  efectividad(firstPokeType : string, secondPokeType : string) {\n    let multiplicador = 1;\n    switch (firstPokeType) {\n      case Types[0]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[1] ||\n          secondPokeType === Types[4] || secondPokeType === Types[6]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[7] || secondPokeType === Types[8] ||\n          secondPokeType === Types[13]) multiplicador = 2;\n        break;\n\n      case Types[1]:\n        if (secondPokeType === Types[1] || secondPokeType === Types[3] ||\n          secondPokeType === Types[11]) multiplicador = 1/2;\n        else if (secondPokeType === Types[6] || secondPokeType === Types[13] ||\n          secondPokeType === Types[15]) multiplicador = 2;\n        break;\n\n      case Types[2]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[5] ||\n          secondPokeType === Types[6] || secondPokeType === Types[7] ||\n          secondPokeType === Types[9] || secondPokeType === Types[16] ||\n          secondPokeType === Types[17]) multiplicador = 1/2;\n        else if (secondPokeType === Types[11] || secondPokeType === Types[12] ||\n          secondPokeType === Types[14]) multiplicador = 2;\n        break;\n\n      case Types[3]:\n        if (secondPokeType === Types[0]) multiplicador = 1/2;\n        else if (secondPokeType === Types[3]) multiplicador = 2;\n        else if (secondPokeType === Types[7]) multiplicador = 0;\n        break;\n\n      case Types[4]:\n        if (secondPokeType === Types[3] || secondPokeType === Types[4] ||\n          secondPokeType === Types[11]) multiplicador = 1/2;\n        else if (secondPokeType === Types[1] || secondPokeType === Types[17]) {\n          multiplicador = 2;\n        } else if (secondPokeType === Types[15]) multiplicador = 0;\n        break;\n\n      case Types[5]:\n        if (secondPokeType === Types[14]) multiplicador = 1/2;\n        else if (secondPokeType === Types[5] || secondPokeType === Types[12]) {\n          multiplicador = 2;\n        } else if (secondPokeType === Types[10]) multiplicador = 0;\n        break;\n\n      case Types[6]:\n        if (secondPokeType === Types[1] || secondPokeType === Types[3] ||\n          secondPokeType === Types[6] || secondPokeType === Types[13]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[0] || secondPokeType === Types[2] ||\n          secondPokeType === Types[8] || secondPokeType === Types[11]) {\n          multiplicador = 2;\n        }\n        break;\n\n      case Types[7]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[6] ||\n          secondPokeType === Types[16]) multiplicador = 1/2;\n        else if (secondPokeType === Types[3] || secondPokeType === Types[9] ||\n          secondPokeType === Types[14]) multiplicador = 2;\n        break;\n\n      case Types[8]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[1] ||\n          secondPokeType === Types[6] || secondPokeType === Types[8]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[3] || secondPokeType ===Types[11] ||\n          secondPokeType === Types[15] || secondPokeType === Types[17]) {\n          multiplicador = 2;\n        }\n        break;\n\n      case Types[9]:\n        if (secondPokeType === Types[2] || secondPokeType === Types[7] ||\n          secondPokeType === Types[12] || secondPokeType === Types[16] ||\n          secondPokeType === Types[17]) multiplicador = 1/2;\n        else if (secondPokeType === Types[0] || secondPokeType === Types[8] ||\n          secondPokeType === Types[10] || secondPokeType === Types[13] ||\n          secondPokeType === Types[14]) multiplicador = 2;\n        else if (secondPokeType === Types[5]) multiplicador = 0;\n        break;\n\n      case Types[10]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[13]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[5]) multiplicador = 0;\n        break;\n\n      case Types[11]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[2] ||\n          secondPokeType === Types[3] || secondPokeType === Types[6] ||\n          secondPokeType === Types[11] || secondPokeType === Types[16] ||\n          secondPokeType === Types[17]) multiplicador = 1/2;\n        else if (secondPokeType === Types[1] || secondPokeType === Types[13] ||\n          secondPokeType === Types[15]) multiplicador = 2;\n        break;\n\n      case Types[12]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[12]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[9] || secondPokeType ===Types[16]) {\n          multiplicador = 2;\n        } else if (secondPokeType === Types[14]) multiplicador = 0;\n        break;\n\n      case Types[13]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[9] ||\n          secondPokeType === Types[15]) multiplicador = 1/2;\n        else if (secondPokeType === Types[2] || secondPokeType === Types[6] ||\n          secondPokeType === Types[8] || secondPokeType === Types[17]) {\n          multiplicador = 2;\n        }\n        break;\n\n      case Types[14]:\n        if (secondPokeType === Types[7] || secondPokeType === Types[9] ||\n          secondPokeType === Types[14]) multiplicador = 1/2;\n        else if (secondPokeType === Types[5] || secondPokeType === Types[12]) {\n          multiplicador = 2;\n        }\n        break;\n\n      case Types[15]:\n        if (secondPokeType === Types[2] || secondPokeType === Types[11]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[0] || secondPokeType === Types[4] ||\n          secondPokeType === Types[6] || secondPokeType === Types[13] ||\n          secondPokeType === Types[16]) multiplicador = 2;\n        else if (secondPokeType === Types[17]) multiplicador = 0;\n        break;\n\n      case Types[16]:\n        if (secondPokeType === Types[5] || secondPokeType === Types[13] ||\n          secondPokeType === Types[15] || secondPokeType === Types[16]) {\n          multiplicador = 1/2;\n        } else if (secondPokeType === Types[7] || secondPokeType ===Types[11]) {\n          multiplicador = 2;\n        } else if (secondPokeType === Types[0]) multiplicador = 0;\n        break;\n\n      case Types[17]:\n        if (secondPokeType === Types[0] || secondPokeType === Types[4] ||\n          secondPokeType === Types[13]) multiplicador = 1/2;\n        else if (secondPokeType === Types[2] || secondPokeType === Types[9] ||\n          secondPokeType === Types[11]) multiplicador = 2;\n        break;\n    }\n    return multiplicador;\n  }\n}"]}