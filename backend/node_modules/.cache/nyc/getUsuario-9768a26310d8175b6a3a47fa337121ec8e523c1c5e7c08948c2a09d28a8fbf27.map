{"version":3,"file":"/home/daniel/sytw/backend/sytw_backend/src/routers/usuarioRouters/getUsuario.ts","sources":["/home/daniel/sytw/backend/sytw_backend/src/routers/usuarioRouters/getUsuario.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAAmC;AACnC,kDAA+C;AAElC,QAAA,gBAAgB,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEjD,MAAM,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAEpC;;;;;;EAME;AACF,wBAAgB,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAClD,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAE/E,IAAI;QACF,MAAM,OAAO,GAAG,MAAM,iBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE3C,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1B;QACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;KAC/B;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;KAC/B;AACH,CAAC,CAAC,CAAC","sourcesContent":["import * as express from 'express';\nimport { Usuario } from '../../models/usuario';\n\nexport const getUsuarioRouter = express.Router();\n\nconst jwt = require('jsonwebtoken');\n\n/**\n * Funcion que obtiene a un usuario de la base de datos segun un nombre.\n * Comprueba que se disponga del parametro nombre en la query\n * y crea el filtro para la base de datos tratandolo como una cadena.\n * La bbdd se filtra y si se obtiene algun usuario se devuelve, en\n * caso contrario se informa de un error.\n*/\ngetUsuarioRouter.get('/usuario', async (req, res) => {\n  const filter = req.query.nombre ? { nombre: req.query.nombre.toString() } : {};\n\n  try {\n    const usuario = await Usuario.find(filter);\n\n    if (usuario.length !== 0) {\n      return res.send(usuario);\n    }\n    return res.status(404).send();\n  } catch (error) {\n    return res.status(500).send();\n  }\n});"]}